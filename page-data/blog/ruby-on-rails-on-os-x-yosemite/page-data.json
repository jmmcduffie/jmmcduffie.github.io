{"componentChunkName":"component---src-templates-post-js","path":"/blog/ruby-on-rails-on-os-x-yosemite/","result":{"data":{"markdownRemark":{"html":"<p>Recently I decided to replace my nearly seven-year-old MacBook Pro with a brand-new one. As I sometimes do in situations like this, I decided to set everything up from scratch rather than restoring from another device or a backup. Since I was running Mavericks on my old laptop, this meant getting a development environment going on a new version of OS X. It was a straight-forward process but I decided to document it for my own reference and share it in case someone else can benefit from it.</p>\n<h2>General Setup</h2>\n<p>The first thing you need for development on a Mac is the Xcode command-line tools. Fortunately, installing them is quite easy these days:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">xcode-select --install <span class=\"token comment\"># then click “Install”</span></code></pre></div>\n<p>Using a package manager makes everything a little easier (in my opinion), and I always reach for <a href=\"http://brew.sh\">Homebrew</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ruby -e <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install<span class=\"token variable\">)</span></span>\"</span>\nbrew doctor <span class=\"token comment\"># and then follow the instructions (if any)</span></code></pre></div>\n<p>I ran into permission errors the first time I tried to install any packages so I had to <code class=\"language-text\">chown</code> the <code class=\"language-text\">/usr/local</code> directory to clear those up.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># You might need to do this too</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> -R <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">whoami</span><span class=\"token variable\">)</span></span> /usr/local</code></pre></div>\n<p>Once Homebrew is in place you can install <a href=\"http://www.git-scm.com\">Git</a> and <a href=\"http://nodejs.org\">Node.js</a>. Even though I develop in Rails, I constantly find myself in need of Node for front-end work. Also, if you plan on using GitHub’s Atom editor you’ll want Node to enable its command line tools. (For whatever reason, installing <code class=\"language-text\">node</code> didn’t expose <code class=\"language-text\">npm</code> to the <code class=\"language-text\">$PATH</code>, but installing it as <code class=\"language-text\">npm</code> did.)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> <span class=\"token function\">git</span> <span class=\"token function\">npm</span> <span class=\"token comment\"># not ‘node’</span>\n\n<span class=\"token comment\"># Go ahead and do this if you know you’ll need Grunt</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g grunt-cli</code></pre></div>\n<p>You might elect to install Postgres with Homebrew as well, which I have done in the past. This time, though, I decided to give <a href=\"http://postgresapp.com\">Postgres.app</a> a try. After downloading and dragging to the Applications folder, I updated my <code class=\"language-text\">$PATH</code> to <a href=\"http://postgresapp.com/documentation/cli-tools.html\">enable command-line usage</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># in ~/.bash_profile</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span>:/Applications/Postgres.app/Contents/Versions/9.4/bin</code></pre></div>\n<h2>Ruby Setup</h2>\n<p>Ever since I started learning Ruby and Rails I’ve used <a href=\"http://rvm.io\">RVM</a>. It’s also what my box at work is running. But this time I decided to give <a href=\"https://github.com/sstephenson/rbenv\">rbenv</a> a shot instead. I know other devs who use it, and it’s actually what the Rails team recommends, so I figured it wouldn’t be a bad idea to try it.</p>\n<p>Setting up rbenv is quite simple. I recommend using Homebrew to install it, and unless you plan to manually compile your Ruby versions from source I’d recommend the <code class=\"language-text\">ruby-build</code> plugin:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> rbenv ruby-build\n\n<span class=\"token comment\"># in ~/.bash_profile</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">RBENV_ROOT</span><span class=\"token operator\">=</span>/usr/local/var/rbenv\n<span class=\"token keyword\">if</span> <span class=\"token function\">which</span> rbenv <span class=\"token operator\">></span> /dev/null<span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> <span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>rbenv init -<span class=\"token variable\">)</span></span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">fi</span></code></pre></div>\n<p>I elected to install a few additional plugins as well:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> <span class=\"token variable\">$RBENV_ROOT</span>/plugins\n\n<span class=\"token comment\"># gem-rehash</span>\n<span class=\"token function\">git</span> clone https://github.com/sstephenson/rbenv-gem-rehash.git <span class=\"token punctuation\">\\</span>\n<span class=\"token variable\">$RBENV_ROOT</span>/plugins/rbenv-gem-rehash\n\n<span class=\"token comment\"># default-gems</span>\n<span class=\"token function\">git</span> clone https://github.com/sstephenson/rbenv-default-gems.git <span class=\"token punctuation\">\\</span>\n<span class=\"token variable\">$RBENV_ROOT</span>/plugins/rbenv-default-gems\n\n<span class=\"token comment\"># binstubs</span>\n<span class=\"token function\">git</span> clone https://github.com/ianheggie/rbenv-binstubs.git <span class=\"token punctuation\">\\</span>\n<span class=\"token variable\">$RBENV_ROOT</span>/plugins/rbenv-binstubs</code></pre></div>\n<p>Regardless of whether you do that or not, you should be all set up to install and run a version of Ruby. I downloaded 2.1.1 for this blog, created <code class=\"language-text\">.ruby-version</code>, and generated a binstub for Jekyll.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">rbenv <span class=\"token function\">install</span> <span class=\"token number\">2.1</span>.1\nrbenv <span class=\"token builtin class-name\">local</span> <span class=\"token number\">2.1</span>.1 <span class=\"token comment\"># creates .ruby-version</span>\n\nbundle binstubs jekyll</code></pre></div>\n<p>That’s it! It seems like getting up and running with Rails gets easier all the time. And that’s certainly a good thing. Happy coding.</p>\n<hr>\n<p><strong>Shameless Plug:</strong> Are you a Rails developer? Are you interested in work that matters? <a href=\"http://hire.jobvite.com/m?3MOO0hwa\">We’re hiring!</a></p>","frontmatter":{"title":"Ruby on Rails on OS X Yosemite","date":"January 28, 2015","pubdate":"2015-01-28T00:00:00.000Z"}}},"pageContext":{"slug":"/blog/ruby-on-rails-on-os-x-yosemite/"}}}